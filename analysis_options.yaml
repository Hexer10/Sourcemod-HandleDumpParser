include: package:effective_dart/analysis_options.yaml

linter:
  rules:
    #Unecessary
    - unnecessary_statements
    - unnecessary_new
    - unnecessary_null_aware_assignments
    - unnecessary_null_in_if_null_operators
    - unnecessary_parenthesis
    - unnecessary_const
    - unnecessary_this
    - unnecessary_overrides
    - unnecessary_lambdas
    - unnecessary_getters_setters
    - unnecessary_brace_in_string_interps

    #Avoid
    - empty_statements
    - avoid_empty_else
    - avoid_init_to_null
    - avoid_void_async
    - avoid_types_as_parameter_names
    - prefer_void_to_null
    - prefer_conditional_assignment
    - prefer_is_empty
    - prefer_is_not_empty
    - prefer_single_quotes
    - literal_only_boolean_expressions
    - no_duplicate_case_values
    - throw_in_finally
    - recursive_getters

    #Random checks
    - invariant_booleans

    - await_only_futures
    - unawaited_futures
    - library_names
    - package_names
    - iterable_contains_unrelated_type
    - list_remove_unrelated_type
    - test_types_in_equals
    - unrelated_type_equality_checks
    - no_adjacent_strings_in_list
    - valid_regexps

    #CodeStyle
    - always_put_control_body_on_new_line
    - always_declare_return_types
    - always_put_required_named_parameters_first
    #- always_specify_types
    - annotate_overrides
    - avoid_bool_literals_in_conditional_expressions
    - avoid_catches_without_on_clauses
    - avoid_catching_errors
    - avoid_classes_with_only_static_members
    - avoid_field_initializers_in_const_classes
    - avoid_function_literals_in_foreach_calls
    - avoid_return_types_on_setters
    - avoid_returning_null_for_void
    - avoid_returning_this
    - void_checks
    - use_to_and_as_if_applicable
    - use_string_buffers
    - use_setters_to_change_properties
    - use_rethrow_when_possible
    - type_init_formals
    # - type_annotate_public_apis
    - sort_unnamed_constructors_first
    - slash_for_doc_comments
    - prefer_interpolation_to_compose_strings
    - prefer_int_literals
    - prefer_initializing_formals
    - prefer_foreach
    - prefer_expression_function_bodies
    - prefer_equal_for_default_values
    - prefer_contains
    - prefer_const_declarations
    - prefer_collection_literals
    - prefer_adjacent_string_concatenation
    - parameter_assignments
    - package_prefixed_library_names
    - package_api_docs
    - only_throw_errors
    - lines_longer_than_80_chars
    - flutter_style_todos
    - file_names
    - empty_constructor_bodies
    - empty_catches
    - directives_ordering
    - constant_identifier_names
    #- cascade_invocations
    - camel_case_types
    - avoid_unused_constructor_parameters
    - avoid_types_on_closure_parameters
    - avoid_single_cascade_in_expression_statements
    - avoid_setters_without_getters

    #Idk
    - comment_references
    - control_flow_in_finally
    - sort_pub_dependencies
    - non_constant_identifier_names
    - curly_braces_in_flow_control_structures
    - implementation_imports
    - avoid_relative_lib_imports
    - prefer_iterable_whereType
    - prefer_function_declarations_over_variables
    - prefer_final_fields
    - prefer_typing_uninitialized_variables
    - one_member_abstracts
    - public_member_api_docs
    - prefer_constructors_over_static_methods
    - omit_local_variable_types
    - prefer_generic_function_type_aliases
    - avoid_private_typedef_functions
    - avoid_positional_boolean_parameters